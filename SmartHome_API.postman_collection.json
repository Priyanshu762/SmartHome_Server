{
	"info": {
		"_postman_id": "smart-home-api-collection",
		"name": "SmartHome Server API",
		"description": "Complete API collection for SmartHome Server with authentication, devices, groups, modes, and rules management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3001/api/v1",
			"type": "string"
		},
		{
			"key": "health_url",
			"value": "http://localhost:3001/health",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "device_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "group_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "mode_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "rule_id",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Health Check",
			"item": [
				{
					"name": "Health Status",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{health_url}}",
							"host": [
								"{{health_url}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data.tokens) {",
									"        pm.environment.set(\"jwt_token\", responseJson.data.tokens.accessToken);",
									"        pm.environment.set(\"refresh_token\", responseJson.data.tokens.refreshToken);",
									"        pm.environment.set(\"user_id\", responseJson.data.user._id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"SecurePassword123!\",\n    \"confirmPassword\": \"SecurePassword123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data.tokens) {",
									"        pm.environment.set(\"jwt_token\", responseJson.data.tokens.accessToken);",
									"        pm.environment.set(\"refresh_token\", responseJson.data.tokens.refreshToken);",
									"        pm.environment.set(\"user_id\", responseJson.data.user._id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"SecurePassword123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Current User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data.tokens) {",
									"        pm.environment.set(\"jwt_token\", responseJson.data.tokens.accessToken);",
									"        pm.environment.set(\"refresh_token\", responseJson.data.tokens.refreshToken);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Devices",
			"item": [
				{
					"name": "Get All Devices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/devices",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data._id) {",
									"        pm.environment.set(\"device_id\", responseJson.data._id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Living Room Light\",\n    \"type\": \"light\",\n    \"room\": \"Living Room\",\n    \"properties\": {\n        \"brightness\": 100,\n        \"color\": \"#FFFFFF\",\n        \"colorTemperature\": 3000\n    },\n    \"capabilities\": [\"on_off\", \"brightness\", \"color\", \"color_temperature\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/devices",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/devices/{{device_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"devices",
								"{{device_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Device",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Living Room Smart Light\",\n    \"properties\": {\n        \"brightness\": 80,\n        \"color\": \"#FF6B35\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/devices/{{device_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"devices",
								"{{device_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Control Device",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"action\": \"toggle\",\n    \"properties\": {\n        \"brightness\": 50\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/devices/{{device_id}}/control",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"control"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Device",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/devices/{{device_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"devices",
								"{{device_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Groups",
			"item": [
				{
					"name": "Get All Groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data._id) {",
									"        pm.environment.set(\"group_id\", responseJson.data._id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Living Room Lights\",\n    \"description\": \"All lights in the living room\",\n    \"type\": \"room\",\n    \"devices\": []\n}"
						},
						"url": {
							"raw": "{{base_url}}/groups",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Group by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/groups/{{group_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"groups",
								"{{group_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Living Room Lights\",\n    \"description\": \"All smart lights in the living room area\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/groups/{{group_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"groups",
								"{{group_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Device to Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"deviceId\": \"{{device_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/groups/{{group_id}}/devices",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"groups",
								"{{group_id}}",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Control Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"action\": \"turn_on\",\n    \"properties\": {\n        \"brightness\": 75\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/groups/{{group_id}}/control",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"groups",
								"{{group_id}}",
								"control"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/groups/{{group_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"groups",
								"{{group_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Modes",
			"item": [
				{
					"name": "Get All Modes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/modes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"modes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Mode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data._id) {",
									"        pm.environment.set(\"mode_id\", responseJson.data._id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Movie Night\",\n    \"description\": \"Dim lights and set comfortable temperature\",\n    \"icon\": \"movie\",\n    \"actions\": [\n        {\n            \"type\": \"device\",\n            \"targetId\": \"{{device_id}}\",\n            \"action\": \"set_brightness\",\n            \"value\": 20\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/modes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"modes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Mode by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/modes/{{mode_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"modes",
								"{{mode_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate Mode",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/modes/{{mode_id}}/activate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"modes",
								"{{mode_id}}",
								"activate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Mode",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Enhanced Movie Night\",\n    \"description\": \"Optimized lighting and temperature for movie watching\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/modes/{{mode_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"modes",
								"{{mode_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Mode",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/modes/{{mode_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"modes",
								"{{mode_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Rules",
			"item": [
				{
					"name": "Get All Rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/rules",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data._id) {",
									"        pm.environment.set(\"rule_id\", responseJson.data._id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Motion Sensor Rule\",\n    \"description\": \"Turn on lights when motion is detected\",\n    \"trigger\": {\n        \"type\": \"device\",\n        \"deviceId\": \"{{device_id}}\",\n        \"property\": \"motion\",\n        \"operator\": \"equals\",\n        \"value\": true\n    },\n    \"conditions\": [\n        {\n            \"type\": \"time\",\n            \"operator\": \"between\",\n            \"value\": [\"18:00\", \"23:00\"]\n        }\n    ],\n    \"actions\": [\n        {\n            \"type\": \"device\",\n            \"targetId\": \"{{device_id}}\",\n            \"action\": \"turn_on\",\n            \"value\": { \"brightness\": 80 }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/rules",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Rule by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/rules/{{rule_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"rules",
								"{{rule_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Rule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Enhanced Motion Sensor Rule\",\n    \"isActive\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/rules/{{rule_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"rules",
								"{{rule_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Toggle Rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/rules/{{rule_id}}/toggle",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"rules",
								"{{rule_id}}",
								"toggle"
							]
						}
					},
					"response": []
				},
				{
					"name": "Execute Rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/rules/{{rule_id}}/execute",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"rules",
								"{{rule_id}}",
								"execute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/rules/{{rule_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"rules",
								"{{rule_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Smith\",\n    \"preferences\": {\n        \"theme\": \"dark\",\n        \"notifications\": true\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}
